//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit5.h"
#include "Unit11.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm5 *Form5;

String selectedLetter = "";
int selectedTeacherId;


//---------------------------------------------------------------------------
__fastcall TForm5::TForm5(TComponent* Owner)
	: TForm(Owner)
{
this->Constraints->MinWidth = this->Width;
	this->Constraints->MinHeight = this->Height;
	this->Constraints->MaxWidth = this->Width;
	this->Constraints->MaxHeight = this->Height;
}
//---------------------------------------------------------------------------
void __fastcall TForm5::CheckListBox1Click(TObject *Sender)
{
	TCheckListBox *checkListBox = dynamic_cast<TCheckListBox*>(Sender);

	// Проверяем, что элемент был выбран
	if (CheckListBox1->ItemIndex != -1)
	{
		// Убираем выбор с остальных элементов
		for (int i = 0; i < CheckListBox1->Items->Count; i++)
		{
			if (i != CheckListBox1->ItemIndex)
			{
				CheckListBox1->Checked[i] = false;
			}
		}
	}


   selectedLetter = "";

	// Найдите выбранную букву из TCheckListBox
	for (int i = 0; i < CheckListBox1->Items->Count; i++)
	{
		if (CheckListBox1->Checked[i])
		{
			selectedLetter = CheckListBox1->Items->Strings[i];
			break;
		}
	}

	// Закройте текущий запрос и установите SQL-запрос для получения данных
	ADOQueryPrepods->Close();
	ADOQueryPrepods->SQL->Clear();
	ADOQueryPrepods->SQL->Add("select * from Prepods");
	ADOQueryPrepods->SQL->Add("JOIN Kaphedra ON Prepods.Kaphedra = Kaphedra.id");
	ADOQueryPrepods->SQL->Add("order by First_name");
	ADOQueryPrepods->Open();

	// Переместите фокус на первую запись, начинающуюся с выбранной буквы
	ADOQueryPrepods->First();
	while (!ADOQueryPrepods->Eof)
	{
		String surname = ADOQueryPrepods->FieldByName("First_name")->AsString;
		if (surname.Length() > 0 && surname[1] == selectedLetter[1])
		{
			// Установите фокус на первую запись, начинающуюся с этой буквы
			ADOQueryPrepods->Bookmark = ADOQueryPrepods->GetBookmark();
			break;
		}
		ADOQueryPrepods->Next();
	}

}
//---------------------------------------------------------------------------
void __fastcall TForm5::DBGrid1DrawColumnCell(TObject *Sender, const TRect &Rect,
		  int DataCol, TColumn *Column, TGridDrawState State)
{
	TDBGrid *dbGrid = dynamic_cast<TDBGrid*>(Sender);
	if (dbGrid)
	{
		String surname = dbGrid->DataSource->DataSet->FieldByName("First_name")->AsString;
		String firstLetter;
		if (surname.Length() > 0)
		{
			firstLetter = surname.SubString(1, 1);
		}

		// Если selectedLetter пусто, используйте цвет фона по умолчанию
		if (selectedLetter.IsEmpty() || firstLetter == selectedLetter)
		{
			dbGrid->Canvas->Brush->Color = (selectedLetter.IsEmpty()) ? clBlack : clPurple;
		}
		else
		{
			dbGrid->Canvas->Brush->Color =  clBlack; // Цвет фона DBGrid
		}

		dbGrid->Canvas->FillRect(Rect); // Закрасьте область ячейки

		// Установите цвет текста
		dbGrid->Canvas->Font->Color = clWhite; // Установите цвет текста

		// Нарисуйте текст
		dbGrid->Canvas->TextRect(Rect, Rect.Left + 2, Rect.Top + 2, dbGrid->DataSource->DataSet->FieldByName(Column->Field->FieldName)->AsString);


	}
}
//---------------------------------------------------------------------------
void __fastcall TForm5::Button1Click(TObject *Sender)
{
   if(RegistrationRoot != "Гость")
   {
 // Переменная для хранения ID кафедры
	int KaphedraID;

	// Закрываем и очищаем ADOQuery перед началом нового запроса
	ADOQueryPrepods->Close();
	ADOQueryPrepods->SQL->Clear();

	// Запрос для получения ID кафедры по имени
	ADOQueryPrepods->SQL->Text = "SELECT id FROM Kaphedra WHERE Name = :KaphedraName";
	ADOQueryPrepods->Parameters->ParamByName("KaphedraName")->Value = VarToStr(Edit5->Text);

	try
	{
		ADOQueryPrepods->Open();
		if (!ADOQueryPrepods->Eof)
		{
			KaphedraID = ADOQueryPrepods->FieldByName("id")->AsInteger;
		}
		else
		{
			ShowMessage("Кафедра с таким именем не найдена.");
			return;
		}
		ADOQueryPrepods->Close();
	}
	catch (const Exception &e)
	{
		ShowMessage("Ошибка при поиске кафедры: " + e.Message);
		return;
	}

	// Запрос для добавления нового преподавателя
	ADOQueryPrepods->SQL->Text =
		"INSERT INTO Prepods (First_name, Name, Last_name, Faculty, Kaphedra, Position, Adress, Phone, Email) "
		"VALUES (:First_name, :Name, :Last_name, :Faculty, :Kaphedra, :Position, :Adress, :Phone, :Email)";

	// Устанавливаем параметры для запроса
	ADOQueryPrepods->Parameters->ParamByName("First_name")->Value = VarToStr(Edit1->Text);
	ADOQueryPrepods->Parameters->ParamByName("Name")->Value = VarToStr(Edit2->Text);
	ADOQueryPrepods->Parameters->ParamByName("Last_name")->Value = VarToStr(Edit3->Text);
	ADOQueryPrepods->Parameters->ParamByName("Faculty")->Value = VarToStr(Edit4->Text);
	ADOQueryPrepods->Parameters->ParamByName("Kaphedra")->Value = KaphedraID;
	ADOQueryPrepods->Parameters->ParamByName("Position")->Value = VarToStr(Edit6->Text);
	ADOQueryPrepods->Parameters->ParamByName("Adress")->Value = VarToStr(Edit7->Text);
	ADOQueryPrepods->Parameters->ParamByName("Phone")->Value = VarToStr(Edit8->Text);
	ADOQueryPrepods->Parameters->ParamByName("Email")->Value = VarToStr(Edit9->Text);

	try
	{
		ADOQueryPrepods->ExecSQL();
		ShowMessage("Преподаватель успешно добавлен.");

		ADOQueryPrepods->Close();
	ADOQueryPrepods->SQL->Clear();
	ADOQueryPrepods->SQL->Add("select * from Prepods");
	ADOQueryPrepods->SQL->Add("JOIN Kaphedra ON Prepods.Kaphedra = Kaphedra.id");
	ADOQueryPrepods->SQL->Add("order by First_name");
	ADOQueryPrepods->Open();
	}
	catch (const Exception &e)
	{
		ShowMessage("Ошибка при добавлении преподавателя: " + e.Message);
	}
  }else{
			ShowMessage("Гости не могут использовать данный функционал");
}
}
//---------------------------------------------------------------------------
void __fastcall TForm5::DBGrid1CellClick(TColumn *Column)
{
	selectedTeacherId = ADOQueryPrepods->FieldByName("id")->AsInteger;
	Edit1->Text = ADOQueryPrepods->FieldByName("First_name")->AsString;
	Edit2->Text = ADOQueryPrepods->FieldByName("Name")->AsString;
	Edit3->Text = ADOQueryPrepods->FieldByName("Last_name")->AsString;
	Edit4->Text = ADOQueryPrepods->FieldByName("Faculty")->AsString;
	Edit5->Text = ADOQueryPrepods->FieldByName("Name_1")->AsString;
	Edit6->Text = ADOQueryPrepods->FieldByName("Position")->AsString;
	Edit7->Text = ADOQueryPrepods->FieldByName("Adress")->AsString;
	Edit8->Text = ADOQueryPrepods->FieldByName("Phone")->AsString;
	Edit9->Text = ADOQueryPrepods->FieldByName("Email")->AsString;

}
//---------------------------------------------------------------------------
void __fastcall TForm5::Button2Click(TObject *Sender)
{
    if(RegistrationRoot != "Гость")
   {
	if (selectedTeacherId > 0)
	{
		ADOQueryPrepods->Close();
		ADOQueryPrepods->SQL->Clear();
		ADOQueryPrepods->SQL->Add("DELETE FROM Prepods WHERE id = :id");
		ADOQueryPrepods->Parameters->ParamByName("id")->Value = selectedTeacherId;
		ADOQueryPrepods->ExecSQL();

		// Обновите грид для отображения изменений
	ADOQueryPrepods->Close();
	ADOQueryPrepods->SQL->Clear();
	ADOQueryPrepods->SQL->Add("select * from Prepods");
	ADOQueryPrepods->SQL->Add("JOIN Kaphedra ON Prepods.Kaphedra = Kaphedra.id");
	ADOQueryPrepods->SQL->Add("order by First_name");
	ADOQueryPrepods->Open();

		// Очистите Edit компоненты
		Edit1->Clear();
		Edit2->Clear();
		Edit3->Clear();
		Edit4->Clear();
		Edit5->Clear();
		Edit6->Clear();
		Edit7->Clear();
		Edit8->Clear();
		Edit9->Clear();

		ShowMessage("Преподаватель успешно удален.");
	}
	else
	{
		ShowMessage("Пожалуйста, выберите преподавателя для удаления.");
	}
}else{
			ShowMessage("Гости не могут использовать данный функционал");
}
}
//---------------------------------------------------------------------------
void __fastcall TForm5::Button3Click(TObject *Sender)
{
	// Закройте предыдущие соединения и очистите SQL-запрос
ADOQuery1->Close();
ADOQuery1->SQL->Clear();

// Установите основной запрос
ADOQuery1->SQL->Add("use Practic_work");
ADOQuery1->SQL->Add("select * from Rasp");
ADOQuery1->Open();

// Перейдите к последней записи в наборе данных
ADOQuery1->Last(); // Переходит к последней записи

// Извлеките номер недели из последней записи
int lastWeekNumber = ADOQuery1->FieldByName("week")->AsInteger;
String needyear = ADOQuery1->FieldByName("year")->AsString;

// Установите новый запрос
String query = "use Practic_work "
               "select DISTINCT Rasp.*, Kabin.room, Prepods.*, Subjects.*, Groupe.* "
               "from Rasp "
               "inner join Kabin on Rasp.id_kabin = Kabin.id "
               "inner join Subjects on Rasp.id_pred = Subjects.id "
               "inner join Prepods on Rasp.id_prep = Prepods.id "
               "inner join Groupe on Rasp.id_gr = Groupe.id "
               "inner join Speciality on Speciality.id = Groupe.spec "
               "WHERE Prepods.id = " + IntToStr(selectedTeacherId) + " "
               "AND Rasp.week = " + IntToStr(lastWeekNumber) + " "
               "AND Rasp.year = '" + needyear + "' "
               "ORDER BY Rasp.data";

// Проверка сгенерированного запроса
ShowMessage(query);

// Закройте запрос перед установкой нового
ADOQuery1->Close();
ADOQuery1->SQL->Clear();

// Установите новый запрос
ADOQuery1->SQL->Add(query);
ADOQuery1->Open();

// Настройка и показ отчета
Form11->frxReport1->Preview = Form11->frxPreview1;
Form11->frxReport1->PrepareReport();
Form11->frxReport1->ShowReport();
Form11->ShowModal();


}
//---------------------------------------------------------------------------

